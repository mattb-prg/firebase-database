{"code":"/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { nameCompare, MAX_NAME } from '../../util/util';\r\nimport { LeafNode } from '../LeafNode';\r\nimport { NamedNode } from '../Node';\r\nimport { Index } from './Index';\r\nlet nodeFromJSON;\r\nlet MAX_NODE;\r\nexport function setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nexport function setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\nexport class PriorityIndex extends Index {\r\n    compare(a, b) {\r\n        const aPriority = a.node.getPriority();\r\n        const bPriority = b.node.getPriority();\r\n        const indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    }\r\n    isDefinedOn(node) {\r\n        return !node.getPriority().isEmpty();\r\n    }\r\n    indexedValueChanged(oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    }\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n    maxPost() {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\r\n    }\r\n    makePost(indexValue, name) {\r\n        const priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    }\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString() {\r\n        return '.priority';\r\n    }\r\n}\r\nexport const PRIORITY_INDEX = new PriorityIndex();\r\n//# sourceMappingURL=PriorityIndex.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/src/core/util/util.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/src/core/snap/LeafNode.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/src/core/snap/Node.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/src/core/snap/indexes/Index.ts"],"map":"{\"version\":3,\"file\":\"PriorityIndex.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/core/snap/indexes/PriorityIndex.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AACxD,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACvC,OAAO,EAAE,SAAS,EAAQ,MAAM,SAAS,CAAC;AAE1C,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAEhC,IAAI,YAAkC,CAAC;AACvC,IAAI,QAAc,CAAC;AAEnB,MAAM,UAAU,eAAe,CAAC,GAAyB;IACvD,YAAY,GAAG,GAAG,CAAC;AACrB,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,GAAS;IAClC,QAAQ,GAAG,GAAG,CAAC;AACjB,CAAC;AAED,MAAM,OAAO,aAAc,SAAQ,KAAK;IACtC,OAAO,CAAC,CAAY,EAAE,CAAY;QAChC,MAAM,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,MAAM,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,MAAM,QAAQ,GAAG,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAChD,IAAI,QAAQ,KAAK,CAAC,EAAE;YAClB,OAAO,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;SACpC;aAAM;YACL,OAAO,QAAQ,CAAC;SACjB;IACH,CAAC;IACD,WAAW,CAAC,IAAU;QACpB,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,EAAE,CAAC;IACvC,CAAC;IACD,mBAAmB,CAAC,OAAa,EAAE,OAAa;QAC9C,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;IAC9D,CAAC;IACD,OAAO;QACL,8DAA8D;QAC9D,OAAQ,SAAiB,CAAC,GAAG,CAAC;IAChC,CAAC;IACD,OAAO;QACL,OAAO,IAAI,SAAS,CAAC,QAAQ,EAAE,IAAI,QAAQ,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC5E,CAAC;IAED,QAAQ,CAAC,UAAmB,EAAE,IAAY;QACxC,MAAM,YAAY,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC;QAC9C,OAAO,IAAI,SAAS,CAAC,IAAI,EAAE,IAAI,QAAQ,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC,CAAC;IAC5E,CAAC;IAED;;OAEG;IACH,QAAQ;QACN,OAAO,WAAW,CAAC;IACrB,CAAC;CACF;AAED,MAAM,CAAC,MAAM,cAAc,GAAG,IAAI,aAAa,EAAE,CAAC\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/snap/indexes/PriorityIndex.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { NamedNode, Node } from '../Node';\r\nimport { Index } from './Index';\r\nexport declare function setNodeFromJSON(val: (a: unknown) => Node): void;\r\nexport declare function setMaxNode(val: Node): void;\r\nexport declare class PriorityIndex extends Index {\r\n    compare(a: NamedNode, b: NamedNode): number;\r\n    isDefinedOn(node: Node): boolean;\r\n    indexedValueChanged(oldNode: Node, newNode: Node): boolean;\r\n    minPost(): NamedNode;\r\n    maxPost(): NamedNode;\r\n    makePost(indexValue: unknown, name: string): NamedNode;\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString(): string;\r\n}\r\nexport declare const PRIORITY_INDEX: PriorityIndex;\r\n"}}
