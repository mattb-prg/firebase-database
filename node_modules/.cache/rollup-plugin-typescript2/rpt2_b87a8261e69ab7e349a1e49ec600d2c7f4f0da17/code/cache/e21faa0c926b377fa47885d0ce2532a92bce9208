{"code":"/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { writeTreeRefCalcCompleteChild, writeTreeRefCalcIndexedSlice } from '../WriteTree';\r\nimport { CacheNode } from './CacheNode';\r\nimport { viewCacheGetCompleteServerSnap } from './ViewCache';\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport class NoCompleteChildSource_ {\r\n    getCompleteChild(childKey) {\r\n        return null;\r\n    }\r\n    getChildAfterChild(index, child, reverse) {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Singleton instance.\r\n */\r\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\r\nexport class WriteTreeCompleteChildSource {\r\n    constructor(writes_, viewCache_, optCompleteServerCache_ = null) {\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    getCompleteChild(childKey) {\r\n        const node = this.viewCache_.eventCache;\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            const serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.serverCache;\r\n            return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\r\n        }\r\n    }\r\n    getChildAfterChild(index, child, reverse) {\r\n        const completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : viewCacheGetCompleteServerSnap(this.viewCache_);\r\n        const nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=CompleteChildSource.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/src/core/snap/indexes/Index.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/src/core/snap/Node.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/src/core/WriteTree.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/src/core/view/CacheNode.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/src/core/view/ViewCache.ts"],"map":"{\"version\":3,\"file\":\"CompleteChildSource.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/view/CompleteChildSource.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;AAIH,OAAO,EAEL,6BAA6B,EAC7B,4BAA4B,EAC7B,MAAM,cAAc,CAAC;AAEtB,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAa,8BAA8B,EAAE,MAAM,aAAa,CAAC;AAoBxE;;GAEG;AACH,gEAAgE;AAChE,MAAM,OAAO,sBAAsB;IACjC,gBAAgB,CAAC,QAAiB;QAChC,OAAO,IAAI,CAAC;IACd,CAAC;IACD,kBAAkB,CAChB,KAAa,EACb,KAAiB,EACjB,OAAiB;QAEjB,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAED;;GAEG;AACH,MAAM,CAAC,MAAM,wBAAwB,GAAG,IAAI,sBAAsB,EAAE,CAAC;AAErE;;;GAGG;AACH,MAAM,OAAO,4BAA4B;IACvC,YACU,OAAqB,EACrB,UAAqB,EACrB,0BAAuC,IAAI;QAF3C,YAAO,GAAP,OAAO,CAAc;QACrB,eAAU,GAAV,UAAU,CAAW;QACrB,4BAAuB,GAAvB,uBAAuB,CAAoB;IAClD,CAAC;IACJ,gBAAgB,CAAC,QAAgB;QAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;QACxC,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAE;YACrC,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;SACnD;aAAM;YACL,MAAM,UAAU,GACd,IAAI,CAAC,uBAAuB,IAAI,IAAI;gBAClC,CAAC,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,EAAE,KAAK,CAAC;gBAC1D,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;YAClC,OAAO,6BAA6B,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;SAC1E;IACH,CAAC;IACD,kBAAkB,CAChB,KAAY,EACZ,KAAgB,EAChB,OAAgB;QAEhB,MAAM,kBAAkB,GACtB,IAAI,CAAC,uBAAuB,IAAI,IAAI;YAClC,CAAC,CAAC,IAAI,CAAC,uBAAuB;YAC9B,CAAC,CAAC,8BAA8B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtD,MAAM,KAAK,GAAG,4BAA4B,CACxC,IAAI,CAAC,OAAO,EACZ,kBAAkB,EAClB,KAAK,EACL,CAAC,EACD,OAAO,EACP,KAAK,CACN,CAAC;QACF,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;SACjB;IACH,CAAC;CACF\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/view/CompleteChildSource.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { Index } from '../snap/indexes/Index';\r\nimport { NamedNode, Node } from '../snap/Node';\r\nimport { WriteTreeRef } from '../WriteTree';\r\nimport { ViewCache } from './ViewCache';\r\n/**\r\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\r\n * can help to get complete children that can be pulled in.\r\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\r\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\r\n *\r\n * @interface\r\n */\r\nexport interface CompleteChildSource {\r\n    getCompleteChild(childKey: string): Node | null;\r\n    getChildAfterChild(index: Index, child: NamedNode, reverse: boolean): NamedNode | null;\r\n}\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\r\nexport declare class NoCompleteChildSource_ implements CompleteChildSource {\r\n    getCompleteChild(childKey?: string): Node | null;\r\n    getChildAfterChild(index?: Index, child?: NamedNode, reverse?: boolean): NamedNode | null;\r\n}\r\n/**\r\n * Singleton instance.\r\n */\r\nexport declare const NO_COMPLETE_CHILD_SOURCE: NoCompleteChildSource_;\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\r\nexport declare class WriteTreeCompleteChildSource implements CompleteChildSource {\r\n    private writes_;\r\n    private viewCache_;\r\n    private optCompleteServerCache_;\r\n    constructor(writes_: WriteTreeRef, viewCache_: ViewCache, optCompleteServerCache_?: Node | null);\r\n    getCompleteChild(childKey: string): Node | null;\r\n    getChildAfterChild(index: Index, child: NamedNode, reverse: boolean): NamedNode | null;\r\n}\r\n"}}
