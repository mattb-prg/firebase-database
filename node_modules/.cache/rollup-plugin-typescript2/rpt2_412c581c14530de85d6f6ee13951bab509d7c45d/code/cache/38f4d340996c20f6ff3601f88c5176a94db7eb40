{"code":"/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { nameCompare } from '../../util/util';\r\nimport { NamedNode } from '../Node';\r\nimport { nodeFromJSON } from '../nodeFromJSON';\r\nimport { Index } from './Index';\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    __extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nexport { ValueIndex };\r\nexport var VALUE_INDEX = new ValueIndex();\r\n//# sourceMappingURL=ValueIndex.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/src/core/util/util.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/src/core/snap/Node.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/src/core/snap/nodeFromJSON.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/src/core/snap/indexes/Index.ts"],"map":"{\"version\":3,\"file\":\"ValueIndex.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/core/snap/indexes/ValueIndex.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;;AAEH,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAC9C,OAAO,EAAE,SAAS,EAAQ,MAAM,SAAS,CAAC;AAC1C,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAE/C,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAEhC;IAAgC,8BAAK;IAArC;;IAmCA,CAAC;IAlCC,4BAAO,GAAP,UAAQ,CAAY,EAAE,CAAY;QAChC,IAAM,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,QAAQ,KAAK,CAAC,EAAE;YAClB,OAAO,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;SACpC;aAAM;YACL,OAAO,QAAQ,CAAC;SACjB;IACH,CAAC;IACD,gCAAW,GAAX,UAAY,IAAU;QACpB,OAAO,IAAI,CAAC;IACd,CAAC;IACD,wCAAmB,GAAnB,UAAoB,OAAa,EAAE,OAAa;QAC9C,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IACD,4BAAO,GAAP;QACE,8DAA8D;QAC9D,OAAQ,SAAiB,CAAC,GAAG,CAAC;IAChC,CAAC;IACD,4BAAO,GAAP;QACE,8DAA8D;QAC9D,OAAQ,SAAiB,CAAC,GAAG,CAAC;IAChC,CAAC;IAED,6BAAQ,GAAR,UAAS,UAAkB,EAAE,IAAY;QACvC,IAAM,SAAS,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC;QAC3C,OAAO,IAAI,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACxC,CAAC;IAED;;OAEG;IACH,6BAAQ,GAAR;QACE,OAAO,QAAQ,CAAC;IAClB,CAAC;IACH,iBAAC;AAAD,CAAC,AAnCD,CAAgC,KAAK,GAmCpC;;AAED,MAAM,CAAC,IAAM,WAAW,GAAG,IAAI,UAAU,EAAE,CAAC\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/snap/indexes/ValueIndex.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { NamedNode, Node } from '../Node';\r\nimport { Index } from './Index';\r\nexport declare class ValueIndex extends Index {\r\n    compare(a: NamedNode, b: NamedNode): number;\r\n    isDefinedOn(node: Node): boolean;\r\n    indexedValueChanged(oldNode: Node, newNode: Node): boolean;\r\n    minPost(): NamedNode;\r\n    maxPost(): NamedNode;\r\n    makePost(indexValue: object, name: string): NamedNode;\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString(): string;\r\n}\r\nexport declare const VALUE_INDEX: ValueIndex;\r\n"}}
