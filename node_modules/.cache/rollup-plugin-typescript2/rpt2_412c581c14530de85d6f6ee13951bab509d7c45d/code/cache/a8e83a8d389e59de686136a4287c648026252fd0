{"code":"/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { stringify } from '@firebase/util';\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration - The function to call to with the event data. User provided\r\n     * @param snapshot - The data backing the event\r\n     * @param prevName - Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.ref;\r\n        if (this.eventType === 'value') {\r\n            return ref._path;\r\n        }\r\n        else {\r\n            return ref.parent._path;\r\n        }\r\n    };\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nexport { DataEvent };\r\nvar CancelEvent = /** @class */ (function () {\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\r\nexport { CancelEvent };\r\n//# sourceMappingURL=Event.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/util/dist/index.d.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/src/api/Reference_impl.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/src/core/util/Path.ts","/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/src/core/view/EventRegistration.ts"],"map":"{\"version\":3,\"file\":\"Event.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/view/Event.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAgC3C;;GAEG;AACH;IACE;;;;;OAKG;IACH,mBACS,SAAoB,EACpB,iBAAoC,EACpC,QAAyB,EACzB,QAAwB;QAHxB,cAAS,GAAT,SAAS,CAAW;QACpB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,aAAQ,GAAR,QAAQ,CAAgB;IAC9B,CAAC;IACJ,2BAAO,GAAP;QACE,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;QAC9B,IAAI,IAAI,CAAC,SAAS,KAAK,OAAO,EAAE;YAC9B,OAAO,GAAG,CAAC,KAAK,CAAC;SAClB;aAAM;YACL,OAAO,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;SACzB;IACH,CAAC;IACD,gCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IACD,kCAAc,GAAd;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC;IACD,4BAAQ,GAAR;QACE,OAAO,CACL,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;YACzB,GAAG;YACH,IAAI,CAAC,SAAS;YACd,GAAG;YACH,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,CACrC,CAAC;IACJ,CAAC;IACH,gBAAC;AAAD,CAAC,AApCD,IAoCC;;AAED;IACE,qBACS,iBAAoC,EACpC,KAAY,EACZ,IAAU;QAFV,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,UAAK,GAAL,KAAK,CAAO;QACZ,SAAI,GAAJ,IAAI,CAAM;IAChB,CAAC;IACJ,6BAAO,GAAP;QACE,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IACD,kCAAY,GAAZ;QACE,OAAO,QAAQ,CAAC;IAClB,CAAC;IACD,oCAAc,GAAd;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC;IACD,8BAAQ,GAAR;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,SAAS,CAAC;IAC1C,CAAC;IACH,kBAAC;AAAD,CAAC,AAlBD,IAkBC\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/view/Event.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\r\nimport { Path } from '../util/Path';\r\nimport { EventRegistration } from './EventRegistration';\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @interface\r\n */\r\nexport interface Event {\r\n    getPath(): Path;\r\n    getEventType(): string;\r\n    getEventRunner(): () => void;\r\n    toString(): string;\r\n}\r\n/**\r\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\r\n * \"child_removed\", or \"child_moved.\"\r\n */\r\nexport declare type EventType = 'value' | 'child_added' | 'child_changed' | 'child_moved' | 'child_removed';\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\r\nexport declare class DataEvent implements Event {\r\n    eventType: EventType;\r\n    eventRegistration: EventRegistration;\r\n    snapshot: ExpDataSnapshot;\r\n    prevName?: string | null;\r\n    /**\r\n     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration - The function to call to with the event data. User provided\r\n     * @param snapshot - The data backing the event\r\n     * @param prevName - Optional, the name of the previous child for child_* events.\r\n     */\r\n    constructor(eventType: EventType, eventRegistration: EventRegistration, snapshot: ExpDataSnapshot, prevName?: string | null);\r\n    getPath(): Path;\r\n    getEventType(): string;\r\n    getEventRunner(): () => void;\r\n    toString(): string;\r\n}\r\nexport declare class CancelEvent implements Event {\r\n    eventRegistration: EventRegistration;\r\n    error: Error;\r\n    path: Path;\r\n    constructor(eventRegistration: EventRegistration, error: Error, path: Path);\r\n    getPath(): Path;\r\n    getEventType(): string;\r\n    getEventRunner(): () => void;\r\n    toString(): string;\r\n}\r\n"}}
