{"code":"/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nexport function changeValue(snapshotNode) {\r\n    return { type: \"value\" /* ChangeType.VALUE */, snapshotNode: snapshotNode };\r\n}\r\nexport function changeChildAdded(childName, snapshotNode) {\r\n    return { type: \"child_added\" /* ChangeType.CHILD_ADDED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nexport function changeChildRemoved(childName, snapshotNode) {\r\n    return { type: \"child_removed\" /* ChangeType.CHILD_REMOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nexport function changeChildChanged(childName, snapshotNode, oldSnap) {\r\n    return {\r\n        type: \"child_changed\" /* ChangeType.CHILD_CHANGED */,\r\n        snapshotNode: snapshotNode,\r\n        childName: childName,\r\n        oldSnap: oldSnap\r\n    };\r\n}\r\nexport function changeChildMoved(childName, snapshotNode) {\r\n    return { type: \"child_moved\" /* ChangeType.CHILD_MOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\n//# sourceMappingURL=Change.js.map","references":["/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/src/core/snap/Node.ts"],"map":"{\"version\":3,\"file\":\"Change.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/core/view/Change.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;GAeG;AA8BH,MAAM,UAAU,WAAW,CAAC,YAAkB;IAC5C,OAAO,EAAE,IAAI,gCAAkB,EAAE,YAAY,cAAA,EAAE,CAAC;AAClD,CAAC;AAED,MAAM,UAAU,gBAAgB,CAC9B,SAAiB,EACjB,YAAkB;IAElB,OAAO,EAAE,IAAI,4CAAwB,EAAE,YAAY,cAAA,EAAE,SAAS,WAAA,EAAE,CAAC;AACnE,CAAC;AAED,MAAM,UAAU,kBAAkB,CAChC,SAAiB,EACjB,YAAkB;IAElB,OAAO,EAAE,IAAI,gDAA0B,EAAE,YAAY,cAAA,EAAE,SAAS,WAAA,EAAE,CAAC;AACrE,CAAC;AAED,MAAM,UAAU,kBAAkB,CAChC,SAAiB,EACjB,YAAkB,EAClB,OAAa;IAEb,OAAO;QACL,IAAI,gDAA0B;QAC9B,YAAY,cAAA;QACZ,SAAS,WAAA;QACT,OAAO,SAAA;KACR,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,gBAAgB,CAC9B,SAAiB,EACjB,YAAkB;IAElB,OAAO,EAAE,IAAI,4CAAwB,EAAE,YAAY,cAAA,EAAE,SAAS,WAAA,EAAE,CAAC;AACnE,CAAC\"}","dts":{"name":"/home/matt/Desktop/Projects/Freelance/Damon Chen/firebase-package/packages/database/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/core/view/Change.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { Node } from '../snap/Node';\r\nexport declare const enum ChangeType {\r\n    /** Event type for a child added */\r\n    CHILD_ADDED = \"child_added\",\r\n    /** Event type for a child removed */\r\n    CHILD_REMOVED = \"child_removed\",\r\n    /** Event type for a child changed */\r\n    CHILD_CHANGED = \"child_changed\",\r\n    /** Event type for a child moved */\r\n    CHILD_MOVED = \"child_moved\",\r\n    /** Event type for a value change */\r\n    VALUE = \"value\"\r\n}\r\nexport interface Change {\r\n    /** @param type - The event type */\r\n    type: ChangeType;\r\n    /** @param snapshotNode - The data */\r\n    snapshotNode: Node;\r\n    /** @param childName - The name for this child, if it's a child even */\r\n    childName?: string;\r\n    /** @param oldSnap - Used for intermediate processing of child changed events */\r\n    oldSnap?: Node;\r\n    /**  * @param prevName - The name for the previous child, if applicable */\r\n    prevName?: string | null;\r\n}\r\nexport declare function changeValue(snapshotNode: Node): Change;\r\nexport declare function changeChildAdded(childName: string, snapshotNode: Node): Change;\r\nexport declare function changeChildRemoved(childName: string, snapshotNode: Node): Change;\r\nexport declare function changeChildChanged(childName: string, snapshotNode: Node, oldSnap: Node): Change;\r\nexport declare function changeChildMoved(childName: string, snapshotNode: Node): Change;\r\n"}}
